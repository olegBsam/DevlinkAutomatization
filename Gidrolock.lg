(**
* Управление краном Gidrolock
* @пл13 - выход датчика, показывает, что кран открыт
* @пл14 - выход датчика, показывает, что кран закрыт
* если XOR(пл10, пл11), то состояние не определено
* Связь:
* @пл21 - рв7
* @пл12 - рв8 управление краном (1 - открыт (белый);0 - закрыт(зелено-желтый))
* @рв9 - состояние крана
* @пл10 - смена команды крана
**)


(*
Готовая функция где-то потерялась. Переделать
*)
ПРОЦЕДУРА Gidrolock_InitOnReboot
	НАЧАЛО
		ПЕРЕМЕННЫЕ
			НАЧАЛО
				ЛОГ openCrane
				ЛОГ closeCrane
			КОНЕЦ
			
		ДЛЯ iMdbGidrolockCraneWireOpen[13,16],
			iMdbGidrolockCraneWireClose[14,17],
			iOpcGidrolockCraneCmd[8,10],
			iMdbCraneId[12,15]
		{
			openCrane = пл[iMdbGidrolockCraneWireOpen]
			closeCrane = пл[iMdbGidrolockCraneWireClose]
			рв[iOpcGidrolockCraneCmd] = STATE_GIDROLOCK_CRANE_AWAIT
		}
	КОНЕЦ
	
(*********************************************************************)
ПРОЦЕДУРА Gidrolock_OpcControl
	НАЧАЛО
		ПЕРЕМЕННЫЕ
			НАЧАЛО
				ЛОГ cmdOpen
			КОНЕЦ
			
		cmdOpen = TRUE
		
		:Обработка кранов прямого действия
		ДЛЯ iOpcGidrolockCraneCmd[8],
			iOpcGidrolockCraneState[9],
			iMdbCraneId[12]
		{		
			пл[iMdbCraneId] = _Gidrolock_OpcControl(рв[iOpcGidrolockCraneCmd], рв[iOpcGidrolockCraneState], пл[iMdbCraneId], cmdOpen)
		}
		
		:Обработка инверсных кранов
		ДЛЯ iOpcGidrolockCraneCmd[10],
			iOpcGidrolockCraneState[11],
			iMdbCraneId[15]
		{		
			пл[iMdbCraneId] = _Gidrolock_OpcControl(рв[iOpcGidrolockCraneCmd], рв[iOpcGidrolockCraneState], пл[iMdbCraneId], !cmdOpen)
		}
		
	КОНЕЦ

(*_____________________________________________________________________________*)

ФУНКЦИЯ _Gidrolock_OpcControl

	ВХОДНЫЕ_ПЕРЕМЕННЫЕ
		НАЧАЛО
			ВЕЩ opcGidrolockCraneCmd
			ВЕЩ opcGidrolockCraneState
			ЛОГ lastMdbCraneState
			ЛОГ cmdOpen
		КОНЕЦ
		
	ВЫХОДНЫЕ_ПЕРЕМЕННЫЕ
		НАЧАЛО
			ЛОГ newMdbCraneState
		КОНЕЦ
	НАЧАЛО
	
		newMdbCraneState = lastMdbCraneState
		
		ЕСЛИ (opcGidrolockCraneCmd = STATE_GIDROLOCK_CRANE_OPEN){
			ЕСЛИ (opcGidrolockCraneState = STATE_GIDROLOCK_CRANE_CLOSE){
				newMdbCraneState = cmdOpen
			}			
		}
		ИНАЧЕ_ЕСЛИ (opcGidrolockCraneCmd = STATE_GIDROLOCK_CRANE_CLOSE){
			ЕСЛИ (opcGidrolockCraneState = STATE_GIDROLOCK_CRANE_OPEN){	
				newMdbCraneState = !cmdOpen
			}
		}
		
	КОНЕЦ


(*********************************************************************)

ПРОЦЕДУРА Gidrolock_Monitoring
	НАЧАЛО
		ПЕРЕМЕННЫЕ
			НАЧАЛО
				ЛОГ openCrane
				ЛОГ closeCrane
				ЛОГ mdbCraneState
				ВЕЩ opcGidrolockCraneState
				ВЕЩ opcGidrolockCraneCmd
				ЦЕЛ16 delayTmr
				ЦЕЛ16 switchTmr
			КОНЕЦ
		
		:Обработка кранов прямого действия	
		ДЛЯ iMdbGidrolockCraneWireOpen[13],
			iMdbGidrolockCraneWireClose[14],
			iOpcGidrolockCraneState[9],
			iOpcGidrolockCraneCmd[8],
			iMdbCraneId[12],
			iTmrTsCraneChangeState[5],
			iTmrTsCraneDelayChangeState[6]
		{		
			openCrane = пл[iMdbGidrolockCraneWireOpen]
			closeCrane = пл[iMdbGidrolockCraneWireClose]
			opcGidrolockCraneState = рв[iOpcGidrolockCraneState]
			opcGidrolockCraneCmd = рв[iOpcGidrolockCraneCmd]
			delayTmr = iTmrTsCraneDelayChangeState
			switchTmr = iTmrTsCraneChangeState
		
			(рв[iOpcGidrolockCraneCmd], рв[iOpcGidrolockCraneState]) = _Gidrolock_Monitoring(openCrane, closeCrane, opcGidrolockCraneState, opcGidrolockCraneCmd, пл[iMdbCraneId], switchTmr, delayTmr)
		}
		
		:Обработка инверсных кранов
		ДЛЯ iMdbGidrolockCraneWireOpen[16],
			iMdbGidrolockCraneWireClose[17],
			iOpcGidrolockCraneState[11],
			iOpcGidrolockCraneCmd[10],
			iMdbCraneId[15],
			iTmrTsCraneChangeState[7],
			iTmrTsCraneDelayChangeState[8]
		{		
			openCrane = !пл[iMdbGidrolockCraneWireOpen]
			closeCrane = !пл[iMdbGidrolockCraneWireClose]
			mdbCraneState = !пл[iMdbCraneId]
			
			opcGidrolockCraneState = рв[iOpcGidrolockCraneState]
			opcGidrolockCraneCmd = рв[iOpcGidrolockCraneCmd]
			delayTmr = iTmrTsCraneDelayChangeState
			switchTmr = iTmrTsCraneChangeState
		
			(рв[iOpcGidrolockCraneCmd], рв[iOpcGidrolockCraneState]) = _Gidrolock_Monitoring(openCrane, closeCrane, opcGidrolockCraneState, opcGidrolockCraneCmd, mdbCraneState, switchTmr, delayTmr)
		}
	КОНЕЦ

(*___________________________________________________________________*)

ФУНКЦИЯ _Gidrolock_Monitoring

	ВХОДНЫЕ_ПЕРЕМЕННЫЕ
		НАЧАЛО
			ЛОГ mdbGidrolockCraneWireOpen
			ЛОГ mdbGidrolockCraneWireClose
			ВЕЩ opcGidrolockCraneState
			ВЕЩ opcGidrolockCraneCmd
			ЛОГ mdbCraneState
			ЦЕЛ16 tmrTsCraneChangeState
			ЦЕЛ16 tmrTsCraneDelayChangeState
		КОНЕЦ
		
	ВЫХОДНЫЕ_ПЕРЕМЕННЫЕ
		НАЧАЛО
			ВЕЩ newOpcGidrolockCraneCmd
			ВЕЩ newOpcGidrolockCraneState
		КОНЕЦ
		
	НАЧАЛО
		ПЕРЕМЕННЫЕ
			НАЧАЛО
				ЦЕЛ16 craneState
			КОНЕЦ
			
		newOpcGidrolockCraneCmd = opcGidrolockCraneCmd
		newOpcGidrolockCraneState = opcGidrolockCraneState
					
		ДЛЯ iTmrTsCraneChangeState[5,7],
			iTmrTsCraneDelayChangeState[6,8]
		{
			ЕСЛИ (iTmrTsCraneChangeState = tmrTsCraneChangeState & iTmrTsCraneDelayChangeState = tmrTsCraneDelayChangeState)
			{
				craneState = Decoder_GetGidrolockCraneState(mdbGidrolockCraneWireOpen, mdbGidrolockCraneWireClose, mdbCraneState)
			
				:* true, если крану дана какая-то команда
				ЕСЛИ (opcGidrolockCraneCmd # STATE_GIDROLOCK_CRANE_AWAIT) {
					:* true, если кран находится в состоянии, перейти в которое ему указывает команда
					ЕСЛИ (opcGidrolockCraneCmd = цв(craneState)){
						выкл тс[iTmrTsCraneChangeState]
						тс[iTmrTsCraneChangeState] = 0
						
						тс[iTmrTsCraneDelayChangeState] = 0
						выкл тс[iTmrTsCraneDelayChangeState]
						
						:* Переводим кран в режим ожидания
						newOpcGidrolockCraneCmd = STATE_GIDROLOCK_CRANE_AWAIT
					}
					ИНАЧЕ {
						:* true, если команда указывает перейти из состояния открыт(закрыт) в закрыт(открыт) и состояние еще не достигнуто
						ЕСЛИ ((craneState = STATE_GIDROLOCK_CRANE_OPEN | craneState = STATE_GIDROLOCK_CRANE_CLOSE) & тс[iTmrTsCraneDelayChangeState] = 0){
							:* Запускаем таймер, отсчитывающий время задержки между получением команды и началом её выполнения
							тс[iTmrTsCraneDelayChangeState] = 0
							вкл тс[iTmrTsCraneDelayChangeState]
							:* Запускаем таймер, отсчитывающий время переключения между конечными состояниями
							тс[iTmrTsCraneChangeState] = 0
							вкл тс[iTmrTsCraneChangeState]
						}
						ИНАЧЕ_ЕСЛИ (craneState = STATE_GIDROLOCK_CRANE_OPENS | craneState = STATE_GIDROLOCK_CRANE_CLOSES){
							тс[iTmrTsCraneDelayChangeState] = 0
							выкл тс[iTmrTsCraneDelayChangeState]
						}
					}
				}
				newOpcGidrolockCraneState = цв(Decoder_GetGidrolockCraneFullState(craneState, вц(тс[iTmrTsCraneChangeState]), вц(тс[iTmrTsCraneDelayChangeState])))
			}
		}
	КОНЕЦ

(*********************************************************************)

ФУНКЦИЯ Gidrolock_CmdClose
	ВХОДНЫЕ_ПЕРЕМЕННЫЕ
		НАЧАЛО
			ЦЕЛ16 gidrolockCraneId
		КОНЕЦ
	НАЧАЛО
		
		:Обработка кранов прямого действия
		ДЛЯ iGidrolockCraneId[1],
			iOpcGidrolockCraneCmd[8],
			iOpcGidrolockCraneState[9],
			iMdbCraneId[12]
		{
			ЕСЛИ (iGidrolockCraneId = gidrolockCraneId)	{
				ЕСЛИ (рв[iOpcGidrolockCraneState] = CMD_GIDROLOCK_CRANE_OPEN){
					пл[iMdbCraneId]	= CMD_GIDROLOCK_CRANE_CLOSE
					рв[iOpcGidrolockCraneCmd] = CMD_GIDROLOCK_CRANE_CLOSE
				}
				ВЫХОД
			}
		}
		
		:Обработка инверсных кранов
		ДЛЯ iGidrolockCraneId[2],
			iOpcGidrolockCraneCmd[10],
			iOpcGidrolockCraneState[11],
			iMdbCraneId[15]
		{
			ЕСЛИ (iGidrolockCraneId = gidrolockCraneId)	{
				ЕСЛИ (рв[iOpcGidrolockCraneState] = CMD_GIDROLOCK_CRANE_OPEN){
					пл[iMdbCraneId]	= !CMD_GIDROLOCK_CRANE_CLOSE
					рв[iOpcGidrolockCraneCmd] = CMD_GIDROLOCK_CRANE_CLOSE
				}
				ВЫХОД
			}
		}
	КОНЕЦ

(*********************************************************************)
ФУНКЦИЯ Gidrolock_CmdOpen
	ВХОДНЫЕ_ПЕРЕМЕННЫЕ
		НАЧАЛО
			ЦЕЛ16 gidrolockCraneId
		КОНЕЦ
	НАЧАЛО
	
		:Обработка кранов прямого действия
		ДЛЯ iGidrolockCraneId[1],
			iMdbCraneId[12],
			iOpcGidrolockCraneCmd[8],
			iOpcGidrolockCraneState[9]
		{
			ЕСЛИ (iGidrolockCraneId = gidrolockCraneId){
				ЕСЛИ (рв[iOpcGidrolockCraneState] = STATE_GIDROLOCK_CRANE_CLOSE){ 
					пл[iMdbCraneId]	= CMD_GIDROLOCK_CRANE_OPEN
					рв[iOpcGidrolockCraneCmd] = CMD_GIDROLOCK_CRANE_OPEN
				}
				ВЫХОД
			}
		}

		:Обработка инверсных кранов
		ДЛЯ iGidrolockCraneId[2],
			iMdbCraneId[15],
			iOpcGidrolockCraneCmd[10],
			iOpcGidrolockCraneState[11]
		{
			ЕСЛИ (iGidrolockCraneId = gidrolockCraneId){
				ЕСЛИ (рв[iOpcGidrolockCraneState] = STATE_GIDROLOCK_CRANE_CLOSE){ 
					пл[iMdbCraneId]	= !CMD_GIDROLOCK_CRANE_OPEN
					рв[iOpcGidrolockCraneCmd] = CMD_GIDROLOCK_CRANE_OPEN
				}
				ВЫХОД
			}
		}
	КОНЕЦ

(*********************************************************************)

ФУНКЦИЯ Gidrolock_GetStateById
	ВХОДНЫЕ_ПЕРЕМЕННЫЕ
		НАЧАЛО
			ЦЕЛ16 gidrolockCraneId
		КОНЕЦ
	ВЫХОДНЫЕ_ПЕРЕМЕННЫЕ
		НАЧАЛО
			ЦЕЛ16 gidrolockCraneState
		КОНЕЦ
	
	НАЧАЛО
	
		:Обработка кранов обоих типов
		ДЛЯ iGidrolockCraneId[1,2],
			iOpcGidrolockCraneState[9,11]
		{
			ЕСЛИ (iGidrolockCraneId = gidrolockCraneId){
				gidrolockCraneState = вц(рв[iOpcGidrolockCraneState])
				ПРЕРВАТЬ
			}
		}
	КОНЕЦ

(*********************************************************************)

ФУНКЦИЯ Gidrolock_IsClosed
	ВХОДНЫЕ_ПЕРЕМЕННЫЕ
		НАЧАЛО
			ЦЕЛ16 gidrolockCraneId
		КОНЕЦ
	ВЫХОДНЫЕ_ПЕРЕМЕННЫЕ
		НАЧАЛО
			ЛОГ isClosedCrane
		КОНЕЦ
	
	НАЧАЛО
		ПЕРЕМЕННЫЕ
			НАЧАЛО
				ЦЕЛ16 craneState
			КОНЕЦ
			
		:Обработка кранов прямого действия
		ДЛЯ iGidrolockCraneId[1],
			iMdbCraneId[12],	
			iMdbCraneOpenWire[13],	
			iMdbCraneCloseWire[14]
		{
			ЕСЛИ (iGidrolockCraneId = gidrolockCraneId){
				craneState = Decoder_GetGidrolockCraneState(пл[iMdbCraneOpenWire], пл[iMdbCraneCloseWire], пл[iMdbCraneId])
				isClosedCrane = (craneState = STATE_GIDROLOCK_CRANE_CLOSE)
				ПРЕРВАТЬ
			}
		}
		
		:Обработка инверсных кранов
		ДЛЯ iGidrolockCraneId[2],
			iMdbCraneId[15],	
			iMdbCraneOpenWire[16],	
			iMdbCraneCloseWire[17]
		{
			ЕСЛИ (iGidrolockCraneId = gidrolockCraneId){
				craneState = Decoder_GetGidrolockCraneState(!пл[iMdbCraneOpenWire], !пл[iMdbCraneCloseWire], !пл[iMdbCraneId])
				isClosedCrane = (craneState = STATE_GIDROLOCK_CRANE_CLOSE)
				ПРЕРВАТЬ
			}
		}
		
	КОНЕЦ

(*********************************************************************)

ФУНКЦИЯ Gidrolock_IsOpened 
	ВХОДНЫЕ_ПЕРЕМЕННЫЕ
		НАЧАЛО
			ЦЕЛ16 gidrolockCraneId
		КОНЕЦ
	ВЫХОДНЫЕ_ПЕРЕМЕННЫЕ
		НАЧАЛО
			ЛОГ isOpenedCrane
		КОНЕЦ
	
	НАЧАЛО
		ПЕРЕМЕННЫЕ
			НАЧАЛО
				ЦЕЛ16 craneState 
			КОНЕЦ
			
		:Обработка кранов прямого действия
		ДЛЯ iGidrolockCraneId[1],
			iMdbCraneId[12],
			iMdbCraneOpenWire[13],
			iMdbCraneCloseWire[14]
		{
			ЕСЛИ (iGidrolockCraneId = gidrolockCraneId){
				craneState = Decoder_GetGidrolockCraneState(пл[iMdbCraneOpenWire], пл[iMdbCraneCloseWire], пл[iMdbCraneId])
				isOpenedCrane = (craneState = STATE_GIDROLOCK_CRANE_OPEN)
				ВЫХОД
			}
		}
		
		:Обработка инверсных кранов
		ДЛЯ iGidrolockCraneId[2],
			iMdbCraneId[15],
			iMdbCraneOpenWire[16],
			iMdbCraneCloseWire[17]
		{
			ЕСЛИ (iGidrolockCraneId = gidrolockCraneId){
				craneState = Decoder_GetGidrolockCraneState(!пл[iMdbCraneOpenWire], !пл[iMdbCraneCloseWire], !пл[iMdbCraneId])
				isOpenedCrane = (craneState = STATE_GIDROLOCK_CRANE_OPEN)
				ВЫХОД
			}
		}
	КОНЕЦ